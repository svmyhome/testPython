'''
Напишите программу, на вход которой подаётся прямоугольная матрица в виде последовательности строк,
заканчивающихся строкой, содержащей только строку "end" (без кавычек)
Программа должна вывести матрицу того же размера, у которой каждый элемент
в позиции i, j равен сумме элементов первой матрицы на позициях (i-1, j), (i+1, j), (i, j-1), (i, j+1).
У крайних символов соседний элемент находится с противоположной стороны матрицы.
В случае одной строки/столбца элемент сам себе является соседом по соответствующему направлению.
'''
mass = []
n = []
x = ''
while x != 'end':
    x = input().split()
    if x == 'end':
         print(x)
# while x != 'end':
#     if input().split() == 'end':
#         x = input().split()
#     else:
#         n = [int(i) for i in input().split()]
#     print(n)


'''
Напишите программу, которая считывает список чисел lstlst из первой строки и число xx из второй строки,
которая выводит все позиции, на которых встречается число xx в переданном списке lstlst.
Позиции нумеруются с нуля, если число xx не встречается в списке, вывести строку "Отсутствует" (без кавычек, с большой буквы).
Позиции должны быть выведены в одну строку, по возрастанию абсолютного значения.
'''

# str1 = [int(i) for i in input().split()]
# char1 = int(input())
# str2 = []
# j = 0
# for i in str1:
#     if char1 == i:
#         str2 += [j]
#     j += 1
# if len(str2) == 0:
#     print('Отсутствует')
# else:
#     print(*str2)
'''
Напишите программу, которая выводит часть последовательности 1 2 2 3 3 3 4 4 4 4 5 5 5 5 5 ...
(число повторяется столько раз, чему равно). На вход программе передаётся неотрицательное
целое число n — столько элементов последовательности должна отобразить программа.
На выходе ожидается последовательность чисел, записанных через пробел в одну строку.
Например, если n = 7, то программа должна вывести 1 2 2 3 3 3 4.
'''
# mass = [i + 1 for i in range(int(input()))]
# str1 = []
# i = 0
# for k in mass:
#     i = mass[k - 1]
#     str1 += [i] * i
#     if len(mass) - 1 == k:
#         break
# str1 = str1[0:k+1]
# print(*str1)


'''
Напишите программу, которая считывает с консоли числа (по одному в строке) до тех пор, пока сумма введённых чисел не будет равна 0 и сразу после этого выводит сумму квадратов всех считанных чисел.

Гарантируется, что в какой-то момент сумма введённых чисел окажется равной 0, после этого считывание продолжать не нужно.

В примере мы считываем числа 1, -3, 5, -6, -10, 13; в этот момент замечаем, что сумма этих чисел равна нулю и выводим сумму их квадратов, не обращая внимания на то, что остались ещё не прочитанные значения.
'''

# n = int(input())
# sum = n
# quad = n ** 2
# while sum != 0:
#     n = int(input())
#     sum += n
#     quad += n ** 2
# print(quad)


# n = 5
# j = 3
#
# a = [[0] * n for i in range(n)]
# print(a)
#
# b = [[[0] for i in range(j)] for i in range(n)]
# print(b)
# # a = [['came', 'come', 'came', 'приходить'],
# #      [4, 5, 6],
# #      [7, 8, 9]]
# # print(a[0][3])


'''
Напишите программу, которая принимает на вход список чисел в одной строке
и выводит на экран в одну строку значения, которые встречаются в нём более одного раза.
Для решения задачи может пригодиться метод sort списка.
Выводимые числа не должны повторяться, порядок их вывода может быть произвольным.
'''

# s = [int(i) for i in input().split()]
# m = 0
# j = 1
# str1 = ''
# s.sort()
# if len(s) == 2:
#     if s[m] == s[j]:
#         str1 += str(s[m])
# elif len(s) > 2:
#     while len(s) > j:
#         if s[m] != s[j]:
#             m += 1
#             j += 1
#         elif s[m] == s[j]:
#             while s[m] == s[j] and s[j] != len(s) - 1:
#                 if j >= len(s) - 1:
#                     break
#                 j += 1
#                 if j >= len(s) - 1:
#                     break
#             str1 += str(s[m])
#             m = j
#             j += 1
#             if j < len(s):
#                 str1 += " "
#             if j > len(s) - 1:
#                 break
# print(str1)
'''
Напишите программу, на вход которой подаётся список чисел одной строкой.
Программа должна для каждого элемента этого списка вывести сумму двух его соседей.
Для элементов списка, являющихся крайними, одним из соседей считается элемент, находящий на противоположном конце этого списка.
Например, если на вход подаётся список "1 3 5 6 10", то на выход ожидается список "13 6 9 15 7" (без кавычек).
Если на вход пришло только одно число, надо вывести его же.
Вывод должен содержать одну строку с числами нового списка, разделёнными пробелом.
'''
# n = [int(i) for i in input().split()]
# m = 0
# sum = 0
# str1 = ''
# while len(n) > m:
#     if len(n) == 1:
#         str1 = n[m]
#         break
#     if len(n) == 2:
#         str1 = str(n[m + 1] *2)  + " " +  str(n[m] * 2)
#         break
#     if len(n) > 2:
#         if m == 0:
#             sum = n[1] + n[len(n) - 1]
#             str1 += str(sum) + " "
#         if 0 < m < len(n) - 1:
#             sum = n[m - 1] + n[m + 1]
#             str1 += str(sum) + " "
#         if m == len(n) - 1:
#             sum = n[0] + n[len(n) - 2]
#             str1 += str(sum)
#     m += 1
# print(str1)

# a = [int(i) for i in input().split()]
# b = 0
# for i in a:
#     b += i
# print(b)


# students = ['Masha','Saha', 'Petya']
# prepods = ['Sidor', 'Nikolaq']
#
#
# print(students[1])
# print(students[-1])
# print(students[:2])
# print(students[::-1])
#
# print(students + prepods)
# print(prepods * 2)
#
# students.append('PIOTR')
# students += ['Evgen', 'Zamud']
# students.insert(1,'98324h23hb42jh')
# students += 'Olga'
# students.remove('O')
# del students[8]
# print(students)
# for i in students:
#     print('Hello', i)
#
# if 'Saha' in students:
#     print('Yes')
# if 'Olga' not in students:
#     print('NO')
#
# print(students.index('Petya'))
# st2 = ['Sidor', 'Nikolaq', 'Evgen', 'Zamud']
# print(sorted(students))
# st2.sort()
# print(st2)
# print(min(students))
# print(min(st2))
# print(max(st2))
# print(st2.reverse())
# print(reversed(students))
#
# a = [i*i for i in range(5)]
# print(a)
# b = [str(i) for i in input().split()]
# print(b)
