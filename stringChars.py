'''
Узнав, что ДНК не является случайной строкой, только что поступившие в Институт биоинформатики студенты группы информатиков предложили использовать алгоритм сжатия, который сжимает повторяющиеся символы в строке.

Кодирование осуществляется следующим образом:
s = 'aaaabbсaa' преобразуется в 'a4b2с1a2', то есть группы одинаковых символов исходной строки заменяются на этот символ и количество его повторений в этой позиции строки.

Напишите программу, которая считывает строку, кодирует её предложенным алгоритмом и выводит закодированную последовательность на стандартный вывод. Кодирование должно учитывать регистр символов.
'''

s = input()
i = 0
j = 1
m = 1
str1 = ''
n = 0
t1 = ''
t2 = ''
while len(s) > n:
    if i == len(s) - 1:
        str1 += s[i:j] + str(m)
        break
    if s[i] == s[j]:
        while s[i] == s[j]:
            m += 1
            j += 1
            t2 = s[i:j].replace(s[i] * m, s[i] + str(m))
            if j == len(s):
                n = j
                break
        str1 += s[i:j].replace(s[i] * m, s[i] + str(m))
    else:
        t1 = s[i:j] + str(m)
        str1 += s[i:j] + str(m)
    i += m
    j = i + 1

    n += 1
    m = 1
    # if i == n:
    #     break
# j = int(j)
# print(s[i+1:j].replace('a', str(j)))
print(s)
print(str1)

# s = input().upper()
# r = s[::-1]
# if s == r:
#     print('YES')
# else:
#     print('NO')


'''
GC-состав является важной характеристикой геномных последовательностей и определяется как процентное соотношение суммы всех гуанинов и цитозинов к общему числу нуклеиновых оснований в геномной последовательности.

Напишите программу, которая вычисляет процентное содержание символов G (гуанин) и C (цитозин) в введенной строке (программа не должна зависеть от регистра вводимых символов).

Например, в строке "acggtgttat" процентное содержание символов G и C равно \dfrac4{10} \cdot 100 = 40.0
10
4
​
 ⋅100=40.0, где 4 -- это количество символов G и C,  а 10 -- это длина строки.
'''

# n = input().upper()
# num = 0
# num = n.count('G') + n.count('C')
# print(num/len(n)*100)

# s = input().upper()
# i = 0
# j = len(s) - 1
# is_p = True
# while i < j:
#     if s[i] != s[j]:
#         is_p = False
#         break
#     i += 1
#     j -= 1
# if is_p:
#     print('YES')
# else:
#     print('NO')


# genome = 'ABCD'
# print(genome[2])

# s = input()
# print(len(genome))

# print(genome.count('C'))

# print(s.upper())
# print(s.lower())
# print(s.count('a'))
# print(s.find('a'))
# print(s.replace('a', 'A'))
# print(s.upper().count('ab'.upper()))


# s = 0
# for i in genome:
#     if (i == 'G'):
#         s += 1
# print(s)


# for i in genome:
#     print(i)

# for i in range(len(genome)):
#      print(genome[i])
